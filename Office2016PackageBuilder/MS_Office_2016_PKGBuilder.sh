#!/bin/sh -x
#
# Build script for MS Office 2016 Standard for Mac for Volume Licensing Distribution
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Based on scripts and ideas from 
# Rich Trouton:
# https://derflounder.wordpress.com/2015/08/05/creating-an-office-2016-15-12-3-installer/
# https://derflounder.wordpress.com/2016/01/14/creating-an-office-2016-15-18-0-installer/
# https://derflounder.wordpress.com/2016/01/17/suppressing-office-2016s-first-run-dialog-windows/
#
# Tim Sutton
# http://macops.ca/disabling-first-run-dialogs-in-office-2016-for-mac/
# 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Adapted for use at ETH Zurich by Max Schlapfer
# Edited for newest release: 2016-01-18
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


# # # # # # # # # # # # # # # # # #
# Definition of needed variables  #
# # # # # # # # # # # # # # # # # #

# Product name and Language
PRODUCT="Microsoft_Office_2016"
PKG_LANGUAGE="ML"

# Define main URL (http://macadmins.software)
MAINURL="http://macadmins.software/versions.xml"

# Get latest version number
FULL_VERSION=$(curl -s $MAINURL | xmllint --xpath '//latest/o365/text()' -)

# Use the URL from macadmins.software from the nearest site to your location
# 	AMERICAS:	http://go.microsoft.com/fwlink/?linkid=525133
# 	EUROPE:		http://go.microsoft.com/fwlink/?linkid=532572
# 	ASIA:		http://go.microsoft.com/fwlink/?linkid=532577
# Default setting is the European distribution server from Microsoft
FULL_INSTALLER="http://go.microsoft.com/fwlink/?linkid=532572"


# Define output name based on naming convention
OUTNAME="${PRODUCT}_${FULL_VERSION}_${PKG_LANGUAGE}"
PKG_ID="ch.ethz.mac.pkg.${PRODUCT}.${PKG_LANGUAGE}"

# needed directories 
# IMPORTANT:
# The following directory has to exist and must contain
# your Microsoft_Office_2016_VL_Serializer.pkg
# You can get this PKG from Microsoft:
# https://www.microsoft.com/Licensing/servicecenter/default.aspx
# Attention: You need a login and a valid contract with Microsoft

LICENSE_DIR="volume_license"
								
	if [[ -e "${LICENSE_DIR}/Microsoft_Office_2016_VL_Serializer.pkg" ]]; then
	    echo "Valid license PKG found."
	else
    	echo "NO VALID LICENSING PKG FOUND! EXITING NOW"
    	echo "Download your licensing package and try again."
	    exit 0
	fi

RESULT_DIR="result"
	if [[ -e "${RESULT_DIR}" ]]; then
	    echo "Directory for final output found."
	else
    	echo "Directory for final output not found! Generating now."
	    mkdir -p "result"
	fi

SCRIPT_DIR="${OUTNAME}/scripts"
	if [[ -e "${SCRIPT_DIR}" ]]; then
	    echo "Temp. working directory found."
	else
    	echo "Temp. directory not found! Generating now."
	    mkdir -p "${SCRIPT_DIR}"
	fi


# # # # # # # # # # # # # # # # # #
# Building the package now        #
# # # # # # # # # # # # # # # # # #

# Download all needed files and put them together
# copy licensing package
cp -rp ./${LICENSE_DIR}/Microsoft_Office_2016_VL_Serializer.pkg ${SCRIPT_DIR}

# get most recent full installer
(cd ${SCRIPT_DIR}; curl -LsOJ $FULL_INSTALLER)

# generate postinstall script
cat <<- 'EOF' > ${SCRIPT_DIR}/postinstall
#!/bin/bash
# automatically generated by the Office build script

# Define variables
submit_diagnostic_data_to_microsoft=false
turn_off_first_run_setup=true

# Define what Apps are part of Office 2016, if anything changes in the future
Office2016Apps=(Excel OneNote Outlook PowerPoint Word)

# Determine working directory
WORKING_DIR=`dirname $0`

# Set Log File
LOGFILE="/var/log/MyLogs/MS_Office_2016.log"
LOGPATH=$(dirname "${LOGFILE}")

if [[ -e "${LOGFILE}" ]]; then
    echo "Log file found! Using this it!"
else
    echo "Log file not found! Generating one now."
    mkdir -p "${LOGPATH}"
    touch $LOGFILE
fi

# Define first run configure function
ConfigureOffice2016FirstRun()
{
    # This function will configure the first run dialog windows for all Office 2016 apps.
    # It will also set the desired diagnostic info settings for Office application.
    
    # Special check for OneNote as the application name and PLIST name are not the same.
    if [[ $app == OneNote ]]
    then
        app="onenote.mac";
    fi

   /usr/bin/defaults write /Library/Preferences/com.microsoft."$app" kSubUIAppCompletedFirstRunSetup1507 -bool "$turn_off_first_run_setup"
   /usr/bin/defaults write /Library/Preferences/com.microsoft."$app" SendAllTelemetryEnabled -bool "$submit_diagnostic_data_to_microsoft"

    # Outlook and OneNote require one additional first run setting to be disabled
    if [[ $app == "Outlook" ]] || [[ $app == "onenote.mac" ]]; then
        /usr/bin/defaults write /Library/Preferences/com.microsoft."$app" FirstRunExperienceCompletedO15 -bool "$turn_off_first_run_setup"
    fi
}

# Remove an old 2016 volume licensing file
# due to an error in the licensing file, old versions will stop working in Q2/2016
# check for existance of Office 2016 licensing file and remove it if found
if [[ -e "/Library/Preferences/com.microsoft.office.licensingV2.plist" ]]; then
    echo "$(date): old Volume License file found. Removing it before installing new one."      2>&1 | tee -a $LOGFILE
        rm /Library/Preferences/com.microsoft.office.licensingV2.plist
else
    echo "$(date): Volume License file not found! Installing new one now."      2>&1 | tee -a $LOGFILE
fi

# Install Microsoft Office 2016
/usr/sbin/installer -dumplog -verbose -pkg "$WORKING_DIR/Microsoft_Office_2016_Installer.pkg" -target "$3"   2>&1 | tee -a $LOGFILE

# Install the Microsoft Office 2016 Volume License file from
/usr/sbin/installer -dumplog -verbose -pkg "$WORKING_DIR/Microsoft_Office_2016_VL_Serializer.pkg" -target "$3"   2>&1 | tee -a $LOGFILE

# Configure AutoUpdate behaviour (set to manual check)
/usr/bin/defaults write /Library/Preferences/com.microsoft.autoupdate2 HowToCheck -string 'Manual'
/usr/bin/defaults write /Library/Preferences/com.microsoft.autoupdate2 LastUpdate -date '2016-01-13T15:00:00Z'


# Configure Office First Run behaviour now
for APPNAME in ${Office2016Apps[*]}
do
    if [[ -e "/Applications/Microsoft $APPNAME.app" ]]; then
    app=$APPNAME
    ConfigureOffice2016FirstRun
    fi
done

exit 0
EOF

chmod +x ${SCRIPT_DIR}/postinstall


# build final installer PKG
pkgbuild --identifier "$PKG_ID" --version "$FULL_VERSION" --nopayload "${OUTNAME}.pkg" --scripts ./${OUTNAME}/scripts

# make DMG containing the configured Microsoft Office Full Installer package
hdiutil create -volname ${OUTNAME} -srcfolder "${OUTNAME}.pkg" -format UDRO "result/${OUTNAME}.dmg"


# clean up after building
rm -rf ${OUTNAME}
rm -f ${OUTNAME}.pkg

echo "DONE"

exit 0
